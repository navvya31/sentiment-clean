name: Build and Deploy Flask API Docker Container

on:
  push: 
    branches:
      - develop  # Trigger action on push to the main branch
      - main
  pull_request:
    branches:
      - main  # Trigger action on pull request targeting the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use an Ubuntu runner

    steps:
      - name: Check out code from repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        run: |
          docker build -t my-flask-api .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          docker tag my-flask-api:latest ${{ secrets.DOCKER_USERNAME }}/my-flask-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-flask-api:latest

#  deploy:
#    runs-on: ubuntu-latest
#    needs: build  # Ensure that the build job completes before deployment
#
#    steps:
#      - name: Deploy to server (e.g., AWS EC2)
#        run: |
#          ssh -o StrictHostKeyChecking=no user@your-server-ip "docker pull ${{ secrets.DOCKER_USERNAME }}/my-flask-api:latest && docker run -d -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/my-flask-api:latest"
#        env:
#          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
